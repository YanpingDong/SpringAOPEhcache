<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd         
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd ">
      
    <context:property-placeholder location="classpath*:AppContext.properties" ignore-unresolvable="true"/>
    
    <bean id="virtualDatabase" class="com.test.spring.aop.ehcach.VirtualDatabase"/>
    
    <!-- 引用ehCache的配置 -->   
    <bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">   
      <property name="configLocation">   
        <value>ehcache.xml</value>   
      </property>   
    </bean>   
       
    <!-- 定义ehCache的工厂，并设置所使用的Cache name -->   
    <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">   
      <property name="cacheManager">   
        <ref local="defaultCacheManager"/>   
      </property>   
      <property name="cacheName">   
          <value>DEFAULT_CACHE</value>   
      </property>   
    </bean>   
  
    <!-- find/exist cache 增强，即要增加的业务代码和组织逻辑-->   
    <bean id="methodCacheInterceptor" class="com.test.spring.aop.ehcach.MethodCacheInterceptor">   
      <property name="cache">   
        <ref local="ehCache" />   
      </property>   
    </bean>   
 
    <!-- Spring切面，用来进一步定义那些方法需要增强 -->   
    <bean id="methodCachePointCutAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">   
      <property name="advice">   
        <ref local="methodCacheInterceptor"/>   
      </property>   
      <property name="patterns">   
        <list>   
            <value>.*find.*</value>   
            <value>.*exist.*</value>  
        </list>   
      </property>   
    </bean>   
   
       
    <bean id="proxyVirtualDatabase" class="org.springframework.aop.framework.ProxyFactoryBean">   
      <property name="target">   
          <ref local="virtualDatabase"/>   
      </property>
      <property name="proxyTargetClass">
          <value>true</value>   
      </property>   
      <property name="interceptorNames">   
        <list>   
          <value>methodCachePointCutAdvisor</value>    
        </list>   
      </property>   
    </bean>  
     
</beans>